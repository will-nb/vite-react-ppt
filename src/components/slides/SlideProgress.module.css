/* Fresh start for SlideProgress.module.css */

.layoutGrid {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: 1fr;
  gap: clamp(24px, 4vw, 48px);
  width: 100%;
  height: 100%;
  align-items: end; /* Aligns grid items to the bottom, fixing the "uneven legs" issue */
}

.leftColumn {
  grid-column: 1;
  grid-row: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 24px;
  min-height: 0;
  height: 100%; /* Ensure it takes up full grid area height */
}

.rightColumn {
  grid-column: 2;
  grid-row: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 0; /* Add min-height to constrain flex item */
  height: 100%; /* Ensure it takes up full grid area height */
}

.content {
  flex-shrink: 0;
}

.title {
  font-size: clamp(1.8rem, 4vw, 3rem);
  margin: 0 0 8px;
  color: var(--primary-color);
}

.desc {
  font-size: clamp(1rem, 1.8vw, 1.5rem);
  color: #475569;
  margin: 12px 0 0;
  line-height: 1.6;
}

.imageContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #f5f5f5; /* Reverted from the 'red' debug color */
  border-radius: 24px;
  box-sizing: border-box;
  overflow: hidden;
  padding: 16px; /* Provides internal spacing for the image */
}

.imageContainer img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* This ensures the image is fully visible without being cropped, maintaining its aspect ratio */
}

.rightColumn .imageContainer {
  height: 100%; /* This forces the container to fill the available vertical space defined by the grid, not by its content. */
}

.leftColumn .imageContainer {
  /*
    This is the definitive fix. By making the image container a flex item that can grow,
    it will automatically fill the remaining vertical space in the left column
    after the text content has taken its required space.
    'min-height: 0' is a crucial flexbox fix to prevent the image from overflowing its container.
  */
  flex-grow: 1;
  min-height: 0; 
}

.centeredLayout {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 24px;
  height: 100%;
  text-align: center;
}

.centeredLayout .imageContainer {
  max-width: 800px; /* Constrain the max width of the diagram */
  width: 100%;
}

.centeredLayout .desc ul {
  list-style-type: none; /* Remove default bullet points */
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 12px; /* Space between list items */
}

.heroImageLayout {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: 32px;
  height: 100%;
  padding: clamp(24px, 5vh, 60px) clamp(24px, 5vw, 110px); /* Vertical and horizontal padding */
  box-sizing: border-box;
}

.heroImageLayout .content {
  text-align: center;
  flex-shrink: 0;
}

.heroImageLayout .desc {
  max-width: 960px;
  line-height: 1.6;
}

.imageBox {
  width: 100%;
  max-width: 1280px;
  flex-grow: 1; /* Fill remaining vertical space */
  background-color: #333; /* Fallback */
  background-size: cover;
  background-position: center;
  border-radius: 24px; /* Consistent with existing style */
}

.image {
  width: 100%; /* Ensure image fits within the padding box */
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  border-radius: 8px;
}

.defaultLayout {
  /* Styles for other steps */
  text-align: center;
}
